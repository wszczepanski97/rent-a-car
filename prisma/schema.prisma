generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model dodatkoweopcje {
  IdDodatkoweOpcje            Int                           @id @default(autoincrement())
  Nazwa                       String                        @db.VarChar(20)
  KosztNaDzien                Int
  dodatkoweopcje_wypozyczenia dodatkoweopcje_wypozyczenia[]

  @@index([IdDodatkoweOpcje], map: "DodatkoweOpcje_idx_1")
}

model dodatkoweopcje_wypozyczenia {
  DodatkoweOpcje_Id Int
  Wypozyczenia_Id   Int
  dodatkoweopcje    dodatkoweopcje @relation(fields: [DodatkoweOpcje_Id], references: [IdDodatkoweOpcje], onDelete: Cascade, onUpdate: Restrict, map: "DodatkoweOpcje_aso_DodatkoweOpcje")
  wypozyczenia      wypozyczenia   @relation(fields: [Wypozyczenia_Id], references: [IdWypozyczenia], onDelete: Cascade, onUpdate: Restrict, map: "DodatkoweOpcje_aso_Wypozyczenia")

  @@id([DodatkoweOpcje_Id, Wypozyczenia_Id])
  @@index([Wypozyczenia_Id], map: "DodatkoweOpcje_aso_Wypozyczenia")
  @@index([DodatkoweOpcje_Id, Wypozyczenia_Id], map: "DodatkoweOpcje_wypozyczenia_idx_1")
}

model klienci {
  IdKlienci     Int            @id @default(autoincrement())
  ProcentRabatu Int?
  IdLokalizacje Int
  IdUzytkownicy Int
  lokalizacje   lokalizacje    @relation(fields: [IdLokalizacje], references: [IdLokalizacje], onDelete: Cascade, onUpdate: Restrict, map: "Klienci_SzczegolyLokalizacji")
  uzytkownicy   uzytkownicy    @relation(fields: [IdUzytkownicy], references: [IdUzytkownicy], onDelete: Cascade, onUpdate: Restrict, map: "Klienci_Uzytkownik")
  wypozyczenia  wypozyczenia[]

  @@index([IdLokalizacje], map: "Klienci_SzczegolyLokalizacji")
  @@index([IdUzytkownicy], map: "Klienci_Uzytkownik")
  @@index([IdKlienci, IdLokalizacje, IdUzytkownicy], map: "Klienci_idx_1")
}

model lokalizacje {
  IdLokalizacje         Int         @id @default(autoincrement())
  Kraj                  String      @db.VarChar(50)
  KodPocztowy           String      @db.VarChar(10)
  Miejscowosc           String      @db.VarChar(50)
  Ulica                 String      @db.VarChar(50)
  NumerUlicy            String      @db.VarChar(5)
  DlugoscGeograficzna   String      @db.VarChar(10)
  SzerokoscGeograficzna String      @db.VarChar(10)
  klienci               klienci[]
  oddzialy              oddzialy[]
  relokacje             relokacje[]
  samochody             samochody[]

  @@index([IdLokalizacje], map: "Lokalizacje_idx_1")
}

model mycie {
  IdMycie            Int      @id @default(autoincrement())
  MyjniaBezdotykowa  Boolean? @db.Bit(1)
  MyjniaAutomatyczna Boolean? @db.Bit(1)
  MyjniaPrywatna     Boolean? @db.Bit(1)
  IdUslugi           Int
  uslugi             uslugi   @relation(fields: [IdUslugi], references: [IdUslugi], onDelete: Cascade, onUpdate: Restrict, map: "Mycie_Usluga")

  @@index([IdUslugi], map: "Mycie_Usluga")
  @@index([IdMycie, IdUslugi], map: "Mycie_idx_1")
}

model oddzialy {
  IdOddzialy         Int             @id @default(autoincrement())
  Nazwa              String          @db.VarChar(30)
  Kontakt            String          @db.VarChar(15)
  DataStworzenia     DateTime        @db.Date
  KosztWynajmuLokalu Int
  IdLokalizacje      Int
  lokalizacje        lokalizacje     @relation(fields: [IdLokalizacje], references: [IdLokalizacje], onUpdate: Restrict, map: "oddzialy_Lokalizacje")
  oddzialy_hist      oddzialy_hist[]

  @@index([IdLokalizacje], map: "oddzialy_Lokalizacje")
}

model oddzialy_hist {
  IdOddzialy_hist Int        @id @default(autoincrement())
  OdKiedy         DateTime   @db.Date
  DoKiedy         DateTime?  @db.Date
  IdPracownicy    Int
  IdOddzialy      Int
  oddzialy        oddzialy   @relation(fields: [IdOddzialy], references: [IdOddzialy], onUpdate: Restrict, map: "Oddzialy_hist_Oddzialy")
  pracownicy      pracownicy @relation(fields: [IdPracownicy], references: [IdPracownicy], onDelete: Cascade, onUpdate: Restrict, map: "Oddzialy_hist_Pracownicy")

  @@index([IdOddzialy], map: "Oddzialy_hist_Oddzialy")
  @@index([IdPracownicy], map: "Oddzialy_hist_Pracownicy")
  @@index([IdOddzialy_hist, IdPracownicy, IdOddzialy], map: "Oddzialy_hist_idx_1")
}

model oplaty {
  IdOplaty       Int          @id @default(autoincrement())
  DataOplaty     DateTime     @db.Timestamp(0)
  KwotaOplacona  Int
  IdWypozyczenia Int
  IdOplatyStatus Int
  oplatystatus   oplatystatus @relation(fields: [IdOplatyStatus], references: [IdOplatyStatus], onUpdate: Restrict, map: "Oplaty_OplatyStatus")
  wypozyczenia   wypozyczenia @relation(fields: [IdWypozyczenia], references: [IdWypozyczenia], onDelete: Cascade, onUpdate: Restrict, map: "Oplaty_Wypozyczenia")

  @@index([IdOplatyStatus], map: "Oplaty_OplatyStatus")
  @@index([IdWypozyczenia], map: "Oplaty_Wypozyczenia")
  @@index([IdOplaty, DataOplaty, IdWypozyczenia, IdOplatyStatus], map: "Oplaty_idx_1")
}

model oplatystatus {
  IdOplatyStatus Int      @id @default(autoincrement())
  Opis           String   @db.VarChar(150)
  oplaty         oplaty[]

  @@index([IdOplatyStatus], map: "OplatyStatus_idx_1")
}

model pracownicy {
  IdPracownicy                                                   Int             @id @default(autoincrement())
  IdStanowiska                                                   Int
  IdUzytkownicy                                                  Int
  stanowiska                                                     stanowiska      @relation(fields: [IdStanowiska], references: [IdStanowiska], onUpdate: Restrict, map: "Pracownicy_Stanowisko")
  uzytkownicy                                                    uzytkownicy     @relation(fields: [IdUzytkownicy], references: [IdUzytkownicy], onDelete: Cascade, onUpdate: Restrict, map: "Pracownicy_Uzytkownik")
  oddzialy_hist                                                  oddzialy_hist[]
  uslugi                                                         uslugi[]
  wyplaty                                                        wyplaty[]
  wypozyczenia_pracownicyTowypozyczenia_IdPracownik_Odbior       wypozyczenia[]  @relation("pracownicyTowypozyczenia_IdPracownik_Odbior")
  wypozyczenia_pracownicyTowypozyczenia_IdPracownik_Podstawienie wypozyczenia[]  @relation("pracownicyTowypozyczenia_IdPracownik_Podstawienie")

  @@index([IdStanowiska], map: "Pracownicy_Stanowisko")
  @@index([IdUzytkownicy], map: "Pracownicy_Uzytkownik")
}

model relokacje {
  IdRelokacje   Int         @id
  IdUslugi      Int
  IdLokalizacje Int
  lokalizacje   lokalizacje @relation(fields: [IdLokalizacje], references: [IdLokalizacje], onUpdate: Restrict, map: "relokacje_Lokalizacja")
  uslugi        uslugi      @relation(fields: [IdUslugi], references: [IdUslugi], onUpdate: Restrict, map: "Relokacje_Usluga")

  @@index([IdUslugi], map: "Relokacje_Usluga_idx")
  @@index([IdLokalizacje], map: "relokacje_Lokalizacja")
}

model role {
  IdRole          Int               @id @default(autoincrement())
  Nazwa           String            @db.VarChar(30)
  role_stanowisko role_stanowisko[]
  role_uzytkownik role_uzytkownik[]

  @@index([IdRole, Nazwa], map: "Role_idx_1")
}

model role_stanowisko {
  IdRole       Int
  IdStanowiska Int
  role         role       @relation(fields: [IdRole], references: [IdRole], onUpdate: Restrict, map: "Rola_Stanowisko_Rola")
  stanowiska   stanowiska @relation(fields: [IdStanowiska], references: [IdStanowiska], onUpdate: Restrict, map: "Rola_Stanowisko_Stanowisko")

  @@id([IdRole, IdStanowiska])
  @@index([IdStanowiska], map: "Rola_Stanowisko_Stanowisko")
  @@index([IdRole, IdStanowiska], map: "Role_Stanowisko_idx_1")
}

model role_uzytkownik {
  IdUzytkownicy Int
  IdRole        Int
  role          role        @relation(fields: [IdRole], references: [IdRole], onUpdate: Restrict, map: "Rola_Uzytkownik_Rola")
  uzytkownicy   uzytkownicy @relation(fields: [IdUzytkownicy], references: [IdUzytkownicy], onDelete: Cascade, onUpdate: Restrict, map: "Rola_Uzytkownik_Uzytkownik")

  @@id([IdUzytkownicy, IdRole])
  @@index([IdRole], map: "Rola_Uzytkownik_Rola")
  @@index([IdUzytkownicy, IdRole], map: "Role_Uzytkownik_idx_1")
}

model samochody {
  IdSamochody          Int                @id @default(autoincrement())
  Marka                String             @db.VarChar(20)
  Model                String             @db.VarChar(20)
  NumerRejestracyjny   String             @db.VarChar(20)
  NumerVIN             String             @db.VarChar(20)
  Kategoria            String             @db.VarChar(3)
  Zdjecia              String?            @db.VarChar(2000)
  CzyUszkodzony        Boolean            @default(dbgenerated("b'0'")) @db.Bit(1)
  Przebieg             String             @db.VarChar(45)
  CzyUmyty             Boolean            @default(dbgenerated("b'1'")) @db.Bit(1)
  IdSamochodySzczegoly Int
  CenaZaGodzine        Int
  OstatniaAktualizacja DateTime?          @db.DateTime(0)
  IdLokalizacje        Int
  lokalizacje          lokalizacje        @relation(fields: [IdLokalizacje], references: [IdLokalizacje], onUpdate: Restrict, map: "Samochody_Lokalizacje")
  samochodyszczegoly   samochodyszczegoly @relation(fields: [IdSamochodySzczegoly], references: [IdSamochodySzczegoly], onUpdate: Restrict, map: "Samochody_SamochodySzczegoly")
  uslugi               uslugi[]

  @@index([IdLokalizacje], map: "Samochody_Lokalizacje")
  @@index([IdSamochodySzczegoly], map: "Samochody_SamochodySzczegoly")
  @@index([IdSamochody, Marka, NumerRejestracyjny, Kategoria, IdSamochodySzczegoly], map: "Samochody_idx_1")
}

model samochodyszczegoly {
  IdSamochodySzczegoly Int         @id @default(autoincrement())
  RodzajPaliwa         String      @db.VarChar(20)
  Nadwozie             String      @db.VarChar(20)
  PojemnoscBagaznika   String      @db.VarChar(20)
  IloscDrzwi           String      @db.VarChar(20)
  IloscMiejsc          String      @db.VarChar(20)
  samochody            samochody[]

  @@index([IdSamochodySzczegoly], map: "SamochodySzczegoly_idx_1")
}

model stanowiska {
  IdStanowiska    Int               @id @default(autoincrement())
  Nazwa           String            @db.VarChar(100)
  pracownicy      pracownicy[]
  role_stanowisko role_stanowisko[]

  @@index([IdStanowiska], map: "Stanowiska_idx_1")
}

model ubezpieczenia {
  IdUbezpieczenia Int            @id @default(autoincrement())
  Nazwa           String         @db.VarChar(50)
  OpisOchrony     String         @db.VarChar(150)
  KosztNaDzien    Int
  wypozyczenia    wypozyczenia[]

  @@index([IdUbezpieczenia], map: "Ubezpieczenia_idx_1")
  @@index([OpisOchrony], map: "Ubezpieczenia_idx_2")
}

model uslugi {
  IdUslugi                 Int            @id @default(autoincrement())
  DataOd                   DateTime       @db.Timestamp(0)
  DataDo                   DateTime       @db.Timestamp(0)
  Opis                     String?        @db.VarChar(150)
  IdPracownicy_Przypisanie Int?
  IdSamochody              Int
  IdUslugaStatus           Int
  pracownicy               pracownicy?    @relation(fields: [IdPracownicy_Przypisanie], references: [IdPracownicy], onDelete: Restrict, onUpdate: Restrict, map: "Usluga_Pracownicy_Przypisanie")
  samochody                samochody      @relation(fields: [IdSamochody], references: [IdSamochody], onUpdate: Restrict, map: "Uslugi_Samochody")
  uslugistatus             uslugistatus   @relation(fields: [IdUslugaStatus], references: [IdUslugiStatus], onUpdate: Restrict, map: "Usluga_Status")
  mycie                    mycie[]
  relokacje                relokacje[]
  uszkodzenia              uszkodzenia[]
  wypozyczenia             wypozyczenia[]

  @@index([IdPracownicy_Przypisanie], map: "Usluga_Pracownicy_Przypisanie")
  @@index([IdUslugaStatus], map: "Usluga_Status_idx")
  @@index([IdSamochody], map: "Uslugi_Samochody")
}

model uslugistatus {
  IdUslugiStatus Int      @id @default(autoincrement())
  Status         String   @db.VarChar(150)
  uslugi         uslugi[]

  @@index([IdUslugiStatus], map: "UszkodzeniaStatus_idx_1")
}

model uszkodzenia {
  IdUszkodzenia      Int      @id @default(autoincrement())
  AutoryzowanySerwis Boolean? @db.Bit(1)
  SamodzielnaNaprawa Boolean? @db.Bit(1)
  Warsztat           Boolean? @db.Bit(1)
  IdUslugi           Int
  uslugi             uslugi   @relation(fields: [IdUslugi], references: [IdUslugi], onUpdate: Restrict, map: "Uszkodzenia_Usluga")

  @@index([IdUslugi], map: "Uszkodzenia_Usluga")
  @@index([IdUszkodzenia, IdUslugi], map: "Uszkodzenia_idx_1")
}

model uzytkownicy {
  IdUzytkownicy   Int               @id @default(autoincrement())
  Imie            String            @db.VarChar(50)
  Nazwisko        String            @db.VarChar(50)
  Pesel           String            @db.VarChar(11)
  NumerDowodu     String            @db.VarChar(20)
  NumerPrawaJazdy String            @db.VarChar(20)
  Email           String            @db.VarChar(30)
  NumerTelefonu   String            @db.VarChar(20)
  Login           String            @db.VarChar(50)
  Haslo           String            @db.VarChar(50)
  Salt            String            @db.VarChar(100)
  Aktywny         Boolean           @db.Bit(1)
  klienci         klienci[]
  pracownicy      pracownicy[]
  role_uzytkownik role_uzytkownik[]

  @@index([IdUzytkownicy, Imie, Nazwisko], map: "Uzytkownicy_idx_1")
}

model wyplaty {
  IdWyplaty    Int        @id @default(autoincrement())
  Kwota        Int
  OdKiedy      DateTime   @db.Date
  DoKiedy      DateTime?  @db.Date
  IdPracownicy Int
  pracownicy   pracownicy @relation(fields: [IdPracownicy], references: [IdPracownicy], onUpdate: Restrict, map: "Wyplata_Pracownicy")

  @@index([IdPracownicy], map: "Wyplata_Pracownicy")
  @@index([IdWyplaty, IdPracownicy], map: "Wyplaty_idx_1")
}

model wypozyczenia {
  IdWypozyczenia                                               Int                           @id @default(autoincrement())
  Kwota                                                        Int
  KwotaPoRabacie                                               Int?
  IdKlienci                                                    Int
  IdUbezpieczenia                                              Int?
  IdUslugi                                                     Int
  IdPracownik_Podstawienie                                     Int?
  IdPracownik_Odbior                                           Int?
  klienci                                                      klienci                       @relation(fields: [IdKlienci], references: [IdKlienci], onDelete: Cascade, onUpdate: Restrict, map: "Wypozyczenia_Klienci")
  pracownicy_pracownicyTowypozyczenia_IdPracownik_Odbior       pracownicy?                   @relation("pracownicyTowypozyczenia_IdPracownik_Odbior", fields: [IdPracownik_Odbior], references: [IdPracownicy], onDelete: Restrict, onUpdate: Restrict, map: "Wypozyczenia_Pracownik_Odbior")
  pracownicy_pracownicyTowypozyczenia_IdPracownik_Podstawienie pracownicy?                   @relation("pracownicyTowypozyczenia_IdPracownik_Podstawienie", fields: [IdPracownik_Podstawienie], references: [IdPracownicy], onDelete: Restrict, onUpdate: Restrict, map: "Wypozyczenia_Pracownik_Podstawienie")
  ubezpieczenia                                                ubezpieczenia?                @relation(fields: [IdUbezpieczenia], references: [IdUbezpieczenia], onDelete: Restrict, onUpdate: Restrict, map: "Wypozyczenia_Ubezpieczenia")
  uslugi                                                       uslugi                        @relation(fields: [IdUslugi], references: [IdUslugi], onDelete: Cascade, onUpdate: Restrict, map: "Wypozyczenia_Uslugi")
  dodatkoweopcje_wypozyczenia                                  dodatkoweopcje_wypozyczenia[]
  oplaty                                                       oplaty[]

  @@index([IdKlienci], map: "Wypozyczenia_Klienci")
  @@index([IdPracownik_Odbior], map: "Wypozyczenia_Pracownik_Odbior")
  @@index([IdPracownik_Podstawienie], map: "Wypozyczenia_Pracownik_Podstawienie")
  @@index([IdUbezpieczenia], map: "Wypozyczenia_Ubezpieczenia")
  @@index([IdUslugi], map: "Wypozyczenia_Uslugi")
  @@index([IdWypozyczenia, Kwota, IdKlienci, IdUbezpieczenia, IdUslugi], map: "Wypozyczenia_idx_1")
}
